@model AcoRoute.Models.Person

@{
    ViewBag.Title = "Create";
}

<h3><b><i class="fa fa-plus-circle fa-lg"></i> Agregar Nueva Parada</b></h3>


@using (Html.BeginForm()) 
{
    @Html.AntiForgeryToken()    
    
    <div class="form-horizontal container-fluid">
        <hr />
        <div class="col-sm-6">
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            <div class="form-group">
                @Html.Label("Apellido", htmlAttributes: new { @class = "control-label col-sm-4" })
                <div class="col-sm-6">
                    @Html.EditorFor(model => model.Surname, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Surname, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.Label("Nombre", htmlAttributes: new { @class = "control-label col-sm-4" })
                <div class="col-sm-6">
                    @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.Label("Domicilio", htmlAttributes: new { @class = "control-label col-sm-4" })
                <div class="col-sm-6">
                    @Html.EditorFor(model => model.Address, new {
                        htmlAttributes = new {
                            @class = "form-control",
                            @onblur = "findAddress('Address','Latitude','Longitude', " + '"' + "label[for= 'addressWarning']" + '"' + ")",
                            @onfocus = "hideElement(" + '"' + "label[for= 'addressWarning']" + '"' + ")"
                        }
                    })
                    @Html.ValidationMessageFor(model => model.Address, "", new { @class = "text-danger" })
                    @Html.Label("addressWarning", "Dirección no encontrada", new { @class = "bg-warning text-warning hidden" })
                </div>
            </div>
            

            <div class="form-group hidden">
                @Html.LabelFor(model => model.Latitude, htmlAttributes: new { @class = "control-label col-sm-4" })
                <div class="col-sm-6">
                    @Html.EditorFor(model => model.Latitude, new { htmlAttributes = new { @class = "form-control" } })
                </div>
            </div>

            <div class="form-group hidden">
                @Html.LabelFor(model => model.Longitude, htmlAttributes: new { @class = "control-label col-sm-4" })
                <div class="col-sm-6">
                    @Html.EditorFor(model => model.Longitude, new { htmlAttributes = new { @class = "form-control" } })
                </div>
            </div>

            <div class="form-group">
                <div class="col-sm-offset-2 col-sm-6">
                    <button type="submit" value="Create" class="btn btn-default"> Crear</button>
                </div>
                <div>
                    <a href="/Persons/Index"><i class="fa fa-list"></i> Volver</a> 
                </div>
            </div>               
        </div>

        

        <div class="col-sm-6">
            <div id="map" class="form-group" style="width: 600px; height: 500px"></div>
            <script type="text/javascript">
                $(document).ready(function () { createMap(15, createPoint(-31.2528803, -61.4919196), false) });
            </script>
        </div> 
        
        @if (ViewBag.ValidModel != null && !ViewBag.ValidModel)
        {
            <script>showAlert("Error", "Error de validacion");</script>
        }

    </div>
}

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    @Scripts.Render("~/Scripts/maps.js")
}
